DNS server para la prueba de Ericsson.

Guía rápida
-----------

Ejecutar en un terminal:
prompt> make
prompt> ./go.bash

Abrir otro terminal y ejecutar:
prompt> ./dig-test.bash

Se creará el fichero 'dnsServer.log' con las trazas del server.


Información sobre los ficheros y carpetas
-----------------------------------------

Makefile : Generado para Linux con targets 'build'(por defecto) y 'clean'.
Makefile.Manual : Escrito a mano para otros sistemas o entornos.
go.bash : Lanza el dnsserver con puerto de escucha 9000 y el fichero 'hosts'.
dig-test.bash : Lanza 'dig' con parametros: @127.0.0.1 -x 193.180.17.140 -p 9000
hosts : Fichero de texto con las correspondencias ipAddress-hostname.
doxygen.conf : Fichero de configuración de Doxygen.
src/ : Carpeta con el código fuente
uml/ : Diagramas UML de clases y de secuencia del server.
nbproject/ : Carpeta con los archivos de configuracion del IDE NetBeans.


Criterios de diseño
-------------------

En el diseño del servidor, se ha priorizado la simplicidad y estabilidad sobre
la eficiencia y la rapidez (un ejemplo claro de ello es el uso de una lista para
guardar los registros host/ipAddress), y sólo se ha implementado el transporte
sobre UDP.

Para mejorar esos dos últimos puntos, se podrían acometer las siguiente mejoras:

 - Sustitución de la lista de Records por una tabla hash.
 - Evitar en lo posible la copia de strings, utilizando punteros donde se pueda.
 - Mejora del Logger con distintos niveles: debug, warning, error, para reducir
   el volcado de trazas.

Para comprender rápidamente el diseño se recomienda mirar los diagramas UML de
clases y de secuencia, luego consultar la documentación generada con doxygen y
por último ir directamente al codigo en C++.


Compilación en distintos sistemas
---------------------------------

El desarrollo se ha realizado sobre Linux 32bits con la distribución Fedora 10.
El server se ha probado en maquinas con Linux 32bits, Ĺinux 64bits y sobre una
maquina Windows 32bits con Cygwin.

Para el desarrollo se ha empleado el IDE Netbeans, que genera automáticamente
los Makefiles. Por ello se suministra un Makefile.Manual más sencillo, por si el
Makefile generado por Netbeans no funciona en otros sistemas operativos o
entornos de compilación.

Como no se ha tenido acceso a maquinas Solaris/HP-UX, puede que sean necesarias
algunas pequeñas adaptaciones en el formato del Makefile.Manual o en la
ubicación o nombre de las librerias con las que linkar.

El codigo fuente, sin embargo, no debe necesitar ninguna modificación para poder
compilarse si se dispone de un compilador estándar C++ relativamente moderno.


Nota Wireshark
--------------

Si se desea ver el flujo de paquetes entre dig y el dnsserver con wireshark, se
puede arrancar el dnsserver en el puerto 53, que es el puerto estándar, pero para
ello es necesario arrancarlo como root (e.g.: sudo -u root ./dnsserver 53 hosts).

Otra forma menos invasiva, es arrancarlo en un puerto como el 9000, capturar los
paquetes con Wireshark, para la captura y usar la opción de menús:
Analyze | Decode as | DNS.


Doxygen y Google code
---------------------

La documentación de Doxygen se puede generar y borrar con los makefile targets:

prompt> make -f Makefile.Manual doxy
prompt> make -f Makefile.Manual doxy-clean

y se puede visualizar en el path relativo:

    doxygen/html/index.html

Los ficheros de este directorio se acceden desde la dirección de google code:

    http://code.google.com/p/dns-server/

Si se dispone de Subversion se puede obtener una copia del código con el comando:

prompt> svn checkout http://dns-server.googlecode.com/svn/trunk/ dns-server


Enjoy it!
Tom

